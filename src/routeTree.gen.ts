/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as ProfileIndexImport } from "./routes/profile/index";
import { Route as GroupCreatorIndexImport } from "./routes/group-creator/index";

// Create Virtual Routes

const LoginLazyImport = createFileRoute("/login")();
const IndexLazyImport = createFileRoute("/")();

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/login.lazy").then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

const ProfileIndexRoute = ProfileIndexImport.update({
  id: "/profile/",
  path: "/profile/",
  getParentRoute: () => rootRoute,
} as any);

const GroupCreatorIndexRoute = GroupCreatorIndexImport.update({
  id: "/group-creator/",
  path: "/group-creator/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/group-creator/": {
      id: "/group-creator/";
      path: "/group-creator";
      fullPath: "/group-creator";
      preLoaderRoute: typeof GroupCreatorIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/profile/": {
      id: "/profile/";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof ProfileIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/group-creator": typeof GroupCreatorIndexRoute;
  "/profile": typeof ProfileIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/group-creator": typeof GroupCreatorIndexRoute;
  "/profile": typeof ProfileIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/group-creator/": typeof GroupCreatorIndexRoute;
  "/profile/": typeof ProfileIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/login" | "/group-creator" | "/profile";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/login" | "/group-creator" | "/profile";
  id: "__root__" | "/" | "/login" | "/group-creator/" | "/profile/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  LoginLazyRoute: typeof LoginLazyRoute;
  GroupCreatorIndexRoute: typeof GroupCreatorIndexRoute;
  ProfileIndexRoute: typeof ProfileIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  GroupCreatorIndexRoute: GroupCreatorIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/group-creator/",
        "/profile/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/group-creator/": {
      "filePath": "group-creator/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
